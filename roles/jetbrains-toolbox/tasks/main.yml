---
- name: Get available releases
  uri:
    url: https://data.services.jetbrains.com/products/releases?code=TBA&type=release
    method: GET
  register: jetbrains_toolbox_available_releases

- name: Get versions
  set_fact:
    jetbrains_toolbox_versions: "{{ jetbrains_toolbox_available_releases.json.TBA | map(attribute='version') | list }}"

- name: Update version fact if latest is overridden
  set_fact:
    jetbrains_toolbox_version: "{{ jetbrains_toolbox_available_releases.json.TBA | sort(attribute='date', reverse=True) | map(attribute='version') | list | first }}"
  when: jetbrains_toolbox_version == 'latest'

- name: Check if version is valid
  assert:
    that: (jetbrains_toolbox_version | string) in jetbrains_toolbox_versions
    msg: "The value of jetbrains_toolbox_version ({{ jetbrains_toolbox_version }}) is invalid. Available options are {{ jetbrains_toolbox_versions | join(', ') }}"

- name: Download JetBrains Toolbox
  get_url:
    url: "{{ jetbrains_toolbox_available_releases.json | json_query(jetbrains_toolbox_download_query) | first }}"
    dest: "{{ jetbrains_toolbox_download_dir }}/jetbrains_toolbox.tar.gz"
    checksum: "sha256:{{ lookup('url', jetbrains_toolbox_available_releases.json | json_query(jetbrains_toolbox_checksum_link) | first) | regex_search('[A-Fa-f0-9]{64}') }}"
  vars:
    jetbrains_toolbox_download_query: "TBA[?version == '{{ jetbrains_toolbox_version }}'].downloads.linux.link"
    jetbrains_toolbox_checksum_link: "TBA[?version == '{{ jetbrains_toolbox_version }}'].downloads.linux.checksumLink"

- name: Unpack install archive
  unarchive:
    src: "{{ jetbrains_toolbox_download_dir }}/jetbrains_toolbox.tar.gz"
    dest: "{{ jetbrains_toolbox_download_dir }}"
    list_files: yes
    remote_src: yes
  register: jetbrains_toolbox_unarchive

- name: debug jetbrains_toolbox_unarchive
  debug:
    var: jetbrains_toolbox_unarchive.files

- name: Install JetBrains Toolbox
  shell: "{{ jetbrains_toolbox_download_dir }}/{{ jetbrains_toolbox_unarchive.files | first }}jetbrains-toolbox --install"

- name: Clean up downloaded files
  become: yes
  file:
    path: "{{ jetbrains_toolbox_download_dir }}/{{ jetbrains_toolbox_unarchive.files | first }}"
    state: absent

- name: Clean up downloaded files
  become: yes
  file:
    path: "{{ item }}"
    state: absent
    recurse: yes
  with_items:
    - "{{ jetbrains_toolbox_download_dir }}/{{ jetbrains_toolbox_unarchive.files[0].path | dirname }}"
    - "{{ jetbrains_toolbox_download_dir }}/jetbrains_toolbox.tar.gz"
